
services:
  api:
    container_name: demo-api
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql+asyncpg://demo:demo@db/demo"
    healthcheck:
      test: [ "CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/health').raise_for_status()" ]
      interval: 5s
      retries: 10
      start_period: 1s
      timeout: 5s
    depends_on:
      db:
        condition: service_healthy
      db-migrate:
        condition: service_completed_successfully

  test:
    container_name: demo-api-test
    build: .
    profiles: ["test"]
    command: poetry run task test
    environment:
      DATABASE_URL: "postgresql+asyncpg://demo:demo@db/demo"
    depends_on:
      db:
        condition: service_healthy
      db-migrate:
        condition: service_completed_successfully

  db:
    container_name: demo-db
    image: postgres:latest
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
      POSTGRES_DB: demo
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "demo" ]
      interval: 5s
      retries: 10
      start_period: 1s
      timeout: 5s
    volumes:
      - db-data:/var/lib/postgresql/data

  db-migrate:
    container_name: demo-db-migrate
    build: .
    command: poetry run alembic upgrade head
    environment:
      DATABASE_URL: "postgresql+asyncpg://demo:demo@db/demo"
    depends_on:
      db:
        condition: service_healthy


volumes:
    db-data:
